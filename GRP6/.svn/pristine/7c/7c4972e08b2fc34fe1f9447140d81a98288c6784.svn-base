<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">  
   
   
    <!-- 1_spring 数据源的配置 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${proxool.driverClassName}" />
		<property name="jdbcUrl" value="${proxool.url}" />
		<property name="user" value="${proxool.username}" />
		<property name="password" value="${proxool.password}" />
		当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
		<property name="acquireIncrement" value="${proxool.acquireIncrement}" />	
			
		最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0
		<property name="maxIdleTime" value="${proxool.maxIdleTime}" />	
		
		连接池中保留的最大连接数。Default: 15
		<property name="maxPoolSize" value="${proxool.maxPoolSize}" />	
		
		 连接池的最小连接数  
		 <property name="minPoolSize" value="${proxool.minPoolSize}" />	
		
		初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3
		<property name="initialPoolSize" value="${proxool.initialPoolSize}" />			
		
	</bean>	 -->
<!-- 阿里 druid 数据库连接池 -->  
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" >    
       <!-- 数据库基本信息配置 -->  
       <property name="url" value="${url}" />    
       <property name="username" value="${username}" />    
       <property name="password" value="${password}" />    
       <property name="driverClassName" value="${driverClassName}" />    
       <property name="filters" value="${filters}" />    
        <!-- 最大并发连接数 -->  
       <property name="maxActive" value="${maxActive}" />  
       <!-- 初始化连接数量 -->  
       <property name="initialSize" value="${initialSize}" />  
       <!-- 配置获取连接等待超时的时间 -->  
       <property name="maxWait" value="${maxWait}" />  
       <!-- 最小空闲连接数 -->  
       <property name="minIdle" value="${minIdle}" />    
       <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
       <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />  
       <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
       <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />    
       <property name="validationQuery" value="${validationQuery}" />    
       <property name="testWhileIdle" value="${testWhileIdle}" />    
       <property name="testOnBorrow" value="${testOnBorrow}" />    
       <property name="testOnReturn" value="${testOnReturn}" />    
       <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />  
       <!-- 打开 removeAbandoned 功能 -->  
       <property name="removeAbandoned" value="${removeAbandoned}" />  
       <!-- 1800 秒，也就是 30 分钟 -->  
       <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />  
       <!-- 关闭 abanded 连接时输出错误日志 -->     
       <property name="logAbandoned" value="${logAbandoned}" />  
  </bean>  
   
  <!-- 2_mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源    
       MyBatis定义数据源,同意加载配置   -->
   
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />        
        
        <property  name="configLocation"  value="classpath:db/mybatis-config.xml"/>          
    </bean>
         
     <!-- ZjmBeanFactory改写了SqlSessionFactoryBean为了截获mapper.xml中的错误 
    <bean id="sqlSessionFactory" class="com.zjm.mapper.ZjmBeanFactory">
        <property name="dataSource" ref="dataSource" />        
        
        <property  name="configLocation"  value="classpath:db/mybatis-config.xml"/>          
    </bean>
    -->
          
    <!--  
        3_mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory   
        basePackage:指定sql映射文件/接口所在的包（自动扫描）  
    -->      
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.zjm.*.db.map"/>  
        <!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"/>  --> 
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>  
    
    <!-- 4_配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
     <property name="dataSource" ref="dataSource" />         
    </bean>
    
  
   <!--  5_启用注解事务-->    
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
  
  
</beans>