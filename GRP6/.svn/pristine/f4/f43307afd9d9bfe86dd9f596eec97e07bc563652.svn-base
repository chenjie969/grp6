package com.zjm.pro.projectLawsuit.web;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.zjm.common.db.model.AjaxRes;
import com.zjm.gbpm.index.service.IndexService;
import com.zjm.pro.apply.service.ProjectApplyService;
import com.zjm.pro.db.model.Pro_project;
import com.zjm.pro.db.model.Pro_projectLawsuit;
import com.zjm.pro.project.service.ProjectService;
import com.zjm.pro.projectLawsuit.service.ProjectLawsuitService;
import com.zjm.sys.db.model.C_dictype;
import com.zjm.sys.dicType.service.DicTypeService;
import com.zjm.util.CustomDispatchServlet;
import com.zjm.util.SystemSession;
import com.zjm.util.Tool;

@Controller
@RequestMapping(value = "/project/projectLawsuit")
public class ProjectLawsuitAction {
	@Resource
	private ProjectLawsuitService lawSuitService;		
	@Resource
	private ProjectService projectService;
	@Resource
	private IndexService indexService;
	@Resource
	private ProjectApplyService projectApplyService;
	@Resource
	private DicTypeService dicTypeService;
	
	
	
	/**
	 * 项目诉讼登记页面
	 * pro_project
	 * @return
	 */
	@RequestMapping(value="/openProjectLawsuitPage")
	public ModelAndView openProjectLawsuitPage(String project_ID){
		ModelAndView mv = CustomDispatchServlet.getModeAndView();
		Pro_project  project= new Pro_project();
		project = projectService.selectOneProjectInfoByWheresql(" and project_ID = \'"+project_ID+"\'");
		Pro_projectLawsuit projectLawsuit = lawSuitService.selectOneProjectLawsuitInfo(" and project_ID = \'"+project_ID+"\'");
		if (projectLawsuit == null) {
			projectLawsuit = new Pro_projectLawsuit();
			projectLawsuit.setProject_ID(project_ID);
		}
		List<C_dictype> guarantyOrgList = dicTypeService.selectAllDicTypeList(" and dicTypePID='78ae83f6524d458dbbd522324c80723d'");//获取承保机构下拉框;
		mv.getModelMap().put("guarantyOrgList",guarantyOrgList);
		mv.getModelMap().put("projectLawsuit", projectLawsuit);
		mv.getModelMap().put("project",project);
		mv.setViewName("/project/apply/projectLawsuit");
		return mv;		
	}
	
//	/**
//	 * 跳转到项目诉讼页面
//	 * @param project_ID
//	 * @return
//	 */
	/*@RequestMapping(value="/projectAfterTrackingPage")
	public ModelAndView projectAfterTrackingPage(String apply_ID,String project_ID){
		ModelAndView mv=CustomDispatchServlet.getModeAndView();
		Index indexData = new Index();
		indexData = indexService.selectProData(SystemSession.getUserSession());
		mv.getModel().put("indexData",indexData);
		mv.setViewName("/project/apply/projectAfterTracking");	
		return mv;
	}*/
	
	/**
	 * 新增一个项目诉讼信息
	 * @param 
	 * @return
	 */
	@RequestMapping(value="/insertOrUpdateProjectLawsuit", method=RequestMethod.POST)
	@ResponseBody
	public AjaxRes insertOrUpdateProjectLawsuit(@RequestBody Pro_projectLawsuit projectLawsuit){
		AjaxRes ar=new AjaxRes();
		try{
			if (projectLawsuit != null && projectLawsuit.getProjectLawsuit_ID() != null && !"".equals(projectLawsuit.getProjectLawsuit_ID())) {
				String ifReview = String.valueOf(projectLawsuit.getIfReview()); 
				if(ifReview !=null && ifReview.equals("0")){ //未审结
					Pro_projectLawsuit proProjectLawsuit = lawSuitService.selectOneProjectLawsuitInfo(" and projectLawsuit_ID = \'"+projectLawsuit.getProjectLawsuit_ID()+"\'");
					if(proProjectLawsuit.getIfReview().equals("1")){ //判断此案审结后  被告是否上诉重启此案  上诉则保留原始数据  再进行新增
						projectLawsuit.setProjectLawsuit_ID(Tool.createUUID32());
						projectLawsuit.setUnit_uid(SystemSession.getUserSession().getUnit_uid());
						projectLawsuit.setCreateUserName(SystemSession.getUserSession().getUser_name());
						ar.setSucceed ( lawSuitService.insertOneProjectLawsuit(SystemSession.getUserSession(), projectLawsuit));
					}else{
						projectLawsuit.setUpdateUserName(SystemSession.getUserSession().getUpdate_user());
						ar.setSucceed ( lawSuitService.updateOneProjectLawsuitInfo(SystemSession.getUserSession(), projectLawsuit));
					}
				}else{
					projectLawsuit.setUpdateUserName(SystemSession.getUserSession().getUpdate_user());
					ar.setSucceed ( lawSuitService.updateOneProjectLawsuitInfo(SystemSession.getUserSession(), projectLawsuit));
				}
				
			} else {
				projectLawsuit.setProjectLawsuit_ID(Tool.createUUID32());
				projectLawsuit.setUnit_uid(SystemSession.getUserSession().getUnit_uid());
				projectLawsuit.setCreateUserName(SystemSession.getUserSession().getUser_name());
				ar.setSucceed ( lawSuitService.insertOneProjectLawsuit(SystemSession.getUserSession(), projectLawsuit));
			}
		}
		catch(Exception e){
			e.printStackTrace();
		}
		return ar;
	}
}
