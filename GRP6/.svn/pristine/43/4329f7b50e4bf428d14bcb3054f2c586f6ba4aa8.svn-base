<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/login.jsp = anon
				/error404.jsp = anon
				/system_login = anon
				/common_timestamp.jsp = anon
				/index.jsp = authc
				/sys/** = authc
				/assets/** = anon
				/js/** = anon
				/plugins/** = anon
				/loginIn = anon
				/loginOut = anon
				/select** = authc
				/update** = authc
				/insert** = authc
				/delete** = authc
				/gbpm** = authc
				/diagram-viewer/** = anon
				/editor-app/** = authc
				/modeler.html = authc
				/app/** = anon
			</value>
		</constructor-arg>
	</bean>
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/index.jsp" />
		<property name="unauthorizedUrl" value="/error404.jsp" />
		<!-- anon:匿名拦截器，即不需要登录即可访问；一般用于静态资源过滤 authc:如果没有登录会跳到相应的登录页面登录 user:用户拦截器，用户已经身份验证/记住我登录的都可 -->
		<!-- <property name="filters">
            <map>
                 <entry key="cas" value-ref="casFilter"/>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property> -->
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>
<!-- CAS认证过滤器  
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
		<property name="failureUrl" value="/login.jsp"/>
	</bean>--> 

	<!-- 項目自定义的Realm -->
	<bean id="shiroRealm" class="com.zjm.util.ShiroRealm"></bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm" />
		<!-- <property name="sessionManager" ref="sessionManager"/> -->
		<!-- 使用下面配置的缓存管理器 -->
		<!-- <property name="cacheManager" ref="shiroCacheManager" /> -->
	</bean>




	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:/spring/ehcache.xml" />
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>